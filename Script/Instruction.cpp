#include "Instruction.h"

uint8_t getInstructionArgsSize(InstructionType type) {
	switch (type) {
	case InstructionType::NOPE:
	case InstructionType::POP:
	case InstructionType::POP_POINT:
	case InstructionType::POP_COLOR:
	case InstructionType::GET_COLOR_RED:
	case InstructionType::GET_COLOR_GREEN:
	case InstructionType::GET_COLOR_BLUE:
	case InstructionType::GET_COLOR_ALPHA:
	case InstructionType::GET_POINT_X:
	case InstructionType::GET_POINT_Y:
	case InstructionType::ADD:
	case InstructionType::ADD_POINT:
	case InstructionType::ADD_COLOR:
	case InstructionType::ADD_TO_POINT:
	case InstructionType::ADD_TO_COLOR:
	case InstructionType::SUB:
	case InstructionType::SUB_POINT:
	case InstructionType::SUB_COLOR:
	case InstructionType::SUB_FROM_POINT:
	case InstructionType::SUB_FROM_COLOR:
	case InstructionType::MUL:
	case InstructionType::MUL_POINT_ON_NUMBER:
	case InstructionType::MUL_COLOR_ON_NUMBER:
	case InstructionType::DIV:
	case InstructionType::DIV_POINT_ON_NUMBER:
	case InstructionType::DIV_COLOR_ON_NUMBER:
	case InstructionType::MOD:
	case InstructionType::MOD_POINT_ON_NUMBER:
	case InstructionType::MOD_COLOR_ON_NUMBER:
	case InstructionType::POW:
	case InstructionType::POW_POINT_TO_NUMBER:
	case InstructionType::POW_COLOR_TO_NUMBER:
	case InstructionType::NEG:
	case InstructionType::NEG_POINT:
	case InstructionType::NEG_COLOR:
	case InstructionType::INC:
	case InstructionType::DEC:
	case InstructionType::NOT:
	case InstructionType::CMP_EQ:
	case InstructionType::CMP_EQ_POINTS:
	case InstructionType::CMP_EQ_COLORS:
	case InstructionType::CMP_NEQ:
	case InstructionType::CMP_NEQ_POINTS:
	case InstructionType::CMP_NEQ_COLORS:
	case InstructionType::CMP_LT:
	case InstructionType::CMP_GT:
	case InstructionType::CMP_GE:
	case InstructionType::CMP_LE:
	case InstructionType::AND:
	case InstructionType::OR:
	case InstructionType::RET:
	case InstructionType::HALT:
	case InstructionType::INIT_RANGE:
	case InstructionType::CHECK_RANGE:
	case InstructionType::PUSH_WIDTH:
	case InstructionType::PUSH_HEIGHT:
	case InstructionType::UPDATE:
	case InstructionType::SET_COLOR:
	case InstructionType::SET_WIDTH:
	case InstructionType::DRAW_PIX:
	case InstructionType::DRAW_STROKE:
	case InstructionType::DRAW_LINE:
	case InstructionType::DRAW_RECT:
	case InstructionType::DRAW_CIRCLE:
	case InstructionType::FILL_RECT:
	case InstructionType::FILL_CIRCLE:
	case InstructionType::SLEEP:
	case InstructionType::ABS:
	case InstructionType::ROUND:
	case InstructionType::FLOOR:
	case InstructionType::CEIL:
	case InstructionType::SIN:
	case InstructionType::COS:
	case InstructionType::TAN:
	case InstructionType::COT:
	case InstructionType::EXP:
	case InstructionType::LOG:
	case InstructionType::LENGTH:
	case InstructionType::DISTANCE:
		return 0;
	case InstructionType::PUSH:
	case InstructionType::ADD_LOCAL:
	case InstructionType::ADD_LOCAL_POINT:
	case InstructionType::ADD_LOCAL_COLOR:
	case InstructionType::CLEAR_SCOPE:
	case InstructionType::LOAD:
	case InstructionType::LOAD_POINT:
	case InstructionType::LOAD_COLOR:
	case InstructionType::STORE:
	case InstructionType::STORE_POINT:
	case InstructionType::STORE_COLOR:
	case InstructionType::LOAD_GLOBAL:
	case InstructionType::LOAD_POINT_GLOBAL:
	case InstructionType::LOAD_COLOR_GLOBAL:
	case InstructionType::STORE_GLOBAL:
	case InstructionType::STORE_POINT_GLOBAL:
	case InstructionType::STORE_COLOR_GLOBAL:
	case InstructionType::GOTO:
	case InstructionType::GOTO_IF_NOT:
	case InstructionType::CALL:
	case InstructionType::SET_IMAGE:
	case InstructionType::MIN:
	case InstructionType::MAX:
	case InstructionType::SUM:
		return 1;
	case InstructionType::COPY_IMAGE:
	case InstructionType::PUSH_POINT:
		return 2;
	default:
		return 0;
	}
}
